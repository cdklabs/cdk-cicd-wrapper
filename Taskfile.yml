version: '3'

env:
  REPOLINTER_DIR: ${HOME}/.repolinter
  REPOLINTER_RULESET: ${HOME}/.repolinter/repolinter.json

tasks:

  init:
    desc: Initialize local dev-environment
    cmds:
      - task: refresh
      - task: init:githook
  
  init:githook:
    desc: Initialize git hook
    cmds:
      - npm run husky

  clean:
    desc: Clean the project
    summary: Removes all the generated folders and returns the project to a clean state.
    cmds:
      - rm -rf node_modules
      - rm -rf dist
      - rm -rf coverage
      - task: refresh
  
  refresh:
    desc: Recover after project has been cleaned
    summary: Reinstall all dependencies based on yarn.lock and execute Projen
    preconditions:
      - test -f .projenrc.ts
      - test -f yarn.lock
    cmds:
      - yarn install --frozen-lockfile
      - npm run projen

  build:
    desc: Build the project
    cmds:
      - npm run build

  fix:
    desc: Run autofix on the project
    cmds:
      - task refresh
      - rm -rf yarn.lock
      - yarn install
      - npm run lint -- --fix
      - npm run validate:fix
      - npm run license -- --fix

  audit:
    desc: Run audit steps on the project
    cmds:
      - npm run check-dependencies
      - npm run audit
      - npm run license

  test-release:
    desc: Run tests and release
    deps:
      - verdaccio:install
    cmds:
      # - yarn add -W shx
      - npm config -L project set @cdklabs:registry=http://127.0.0.1:4873
      - npm config -L project set //127.0.0.1:4873/:_authToken="\"fake\""
      - task: clean
      - task: build
      - task: test-release:pipeline
      - task: test-release:cli
  
  test-release:pipeline:
    desc: Publish the pipeline package locally
    dir: packages/@cdklabs/cdk-cicd-wrapper/dist/js/
    internal: true
    cmds:
      - npm publish --registry http://127.0.0.1:4873

  test-release:cli:
    desc: Publish the cli package locally
    dir: packages/@cdklabs/cdk-cicd-wrapper-cli/dist/js/
    internal: true
    cmds:
      - npm publish --registry http://127.0.0.1:4873

  verdaccio:start:
    desc: Start verdaccio
    summary: Start verdaccio. This task only starts the server. 
    run: once
    cmds:
      - npx verdaccio@latest -c ./.verdaccio/config.yml --listen 0.0.0.0:4873

  verdaccio:install:
    desc: Install verdaccio
    summary: Install verdaccio. This task only downloads and install the tool. 
    run: once
    status:
      - npm exec verdaccio -- --help > /dev/null
    cmds:
      - npm install verdaccio
      - npm exec verdaccio -- --help


    
  
  release-util:list-direct-dependencies:
    desc: List direct dependencies of the project
    summary: List direct dependencies of the project. This is useful when artifact has to be provided for review processes.
    vars:
      NPM_LICENSE_CHECKER_TOOL: license-checker-rseidelsohn
      VERSION: 4.3.0
    cmds:
      - npx -y {{.NPM_LICENSE_CHECKER_TOOL}}@{{.VERSION}} --nopeer --direct  1 --limitAttributes licenses,repository,publisher {{.CLI_ARGS}}

  release-util:repolinter_install:
    desc: Install repolinter
    summary: |
      Install repolinter a tool that is used to provide in-depth analyses. This task only donwlods and install the tool. 
      The `release-util:repolinter` task will run the tool. That requires a configuration file.
    dir: "{{.REPOLINTER_DIR}}"
    run: once
    status:
      - test -d {{.REPOLINTER_DIR}}
    cmds:
      - mkdir -p {{.REPOLINTER_DIR}}
      - git clone https://github.com/todogroup/repolinter.git .
      - npm install

  release-util:repolinter:
    desc: Run repo linter
    env:
      NODE_OPTIONS: --max-old-space-size=127284016
    preconditions:
      - test -t ${HOME}/.repolinter/repolinter.json
    deps:
      - repolinter_install
    cmds:
      - node {{.REPOLINTER_DIR}}/bin/repolinter.js lint . -r {{.REPOLINTER_RULESET}} {{.CLI_ARGS}}