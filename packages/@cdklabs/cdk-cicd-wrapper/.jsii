{
  "author": {
    "name": "CDK CI/CD Wrapper Team",
    "roles": [
      "author"
    ]
  },
  "bundled": {
    "@cloudcomponents/cdk-pull-request-approval-rule": "^2.4.0",
    "@cloudcomponents/cdk-pull-request-check": "^2.4.0"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.130.0",
    "cdk-nag": "^2.28.0",
    "constructs": "^10.3.0"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-kubectl-v20": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.KubectlV20",
          "packageId": "Amazon.CDK.Asset.KubectlV20"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-kubectl-go",
          "packageName": "kubectlv20"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-kubectl-v20",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.kubectl.v20"
        },
        "js": {
          "npm": "@aws-cdk/asset-kubectl-v20"
        },
        "python": {
          "distName": "aws-cdk.asset-kubectl-v20",
          "module": "aws_cdk.asset_kubectl_v20"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {},
        "aws-cdk-lib.aws_apigatewayv2_integrations": {},
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudAssembly.Schema"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudassembly.schema"
            },
            "python": {
              "module": "aws_cdk.cloud_assembly_schema"
            }
          }
        },
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "cdk-nag": {
      "submodules": {
        "cdk-nag.rules": {},
        "cdk-nag.rules.apigw": {},
        "cdk-nag.rules.appsync": {},
        "cdk-nag.rules.athena": {},
        "cdk-nag.rules.autoscaling": {},
        "cdk-nag.rules.cloud9": {},
        "cdk-nag.rules.cloudfront": {},
        "cdk-nag.rules.cloudtrail": {},
        "cdk-nag.rules.cloudwatch": {},
        "cdk-nag.rules.codebuild": {},
        "cdk-nag.rules.cognito": {},
        "cdk-nag.rules.dms": {},
        "cdk-nag.rules.documentdb": {},
        "cdk-nag.rules.dynamodb": {},
        "cdk-nag.rules.ec2": {},
        "cdk-nag.rules.ecr": {},
        "cdk-nag.rules.ecs": {},
        "cdk-nag.rules.efs": {},
        "cdk-nag.rules.eks": {},
        "cdk-nag.rules.elasticache": {},
        "cdk-nag.rules.elasticbeanstalk": {},
        "cdk-nag.rules.elb": {},
        "cdk-nag.rules.emr": {},
        "cdk-nag.rules.eventbridge": {},
        "cdk-nag.rules.glue": {},
        "cdk-nag.rules.iam": {},
        "cdk-nag.rules.kinesis": {},
        "cdk-nag.rules.kms": {},
        "cdk-nag.rules.lambda": {},
        "cdk-nag.rules.lex": {},
        "cdk-nag.rules.mediastore": {},
        "cdk-nag.rules.msk": {},
        "cdk-nag.rules.neptune": {},
        "cdk-nag.rules.opensearch": {},
        "cdk-nag.rules.quicksight": {},
        "cdk-nag.rules.rds": {},
        "cdk-nag.rules.redshift": {},
        "cdk-nag.rules.s3": {},
        "cdk-nag.rules.sagemaker": {},
        "cdk-nag.rules.secretsmanager": {},
        "cdk-nag.rules.sns": {},
        "cdk-nag.rules.sqs": {},
        "cdk-nag.rules.stepfunctions": {},
        "cdk-nag.rules.timestream": {},
        "cdk-nag.rules.vpc": {},
        "cdk-nag.rules.waf": {}
      },
      "targets": {
        "dotnet": {
          "namespace": "Cdklabs.CdkNag",
          "packageId": "Cdklabs.CdkNag"
        },
        "go": {
          "moduleName": "github.com/cdklabs/cdk-nag-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdknag",
            "groupId": "io.github.cdklabs"
          },
          "package": "io.github.cdklabs.cdknag"
        },
        "js": {
          "npm": "cdk-nag"
        },
        "python": {
          "distName": "cdk-nag",
          "module": "cdk_nag"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "This repository contains the infrastructure as code to wrap your AWS CDK project with CI/CD around it.",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/cdklabs/cdk-cicd-wrapper.git",
  "jsiiVersion": "5.4.22 (build bdd0efc)",
  "keywords": [
    "aws",
    "aws-cdk",
    "awscdk",
    "ci-cd",
    "ci-cd-boot",
    "cli",
    "vanilla-pipeline"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "@cdklabs/cdk-cicd-wrapper",
  "readme": {
    "markdown": "## CDK CI/CD Wrapper\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\nThe [CDK CI/CD Wrapper](https://cdklabs.github.io/cdk-cicd-wrapper/) is a comprehensive solution that streamlines the delivery of your AWS Cloud Development Kit (CDK) applications. It provides a robust and standardized multi-stage CI/CD pipeline, ensuring high quality and confidence throughout the development and deployment process.\n\n## Table of Contents\n\n- [Introduction](#introduction)\n- [Features](#features)\n- [Getting Started](#getting-started)\n  - [Prerequisites](#prerequisites)\n  - [Installation](#installation)\n- [Usage](#usage)\n  - [Defining Stages](#defining-stages)\n  - [Configuring Stacks](#configuring-stacks)\n  - [Customizing CI/CD Steps](#customizing-cicd-steps)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Introduction\n\nThe CDK CI/CD Wrapper builds upon the success of the [aws-cdk-cicd-boot-sample](https://github.com/aws-samples/aws-cdk-cicd-boot-sample) and takes it a step further by providing additional tools and features to simplify and standardize the multi-stage CI/CD process for your Infrastructure as Code (IaC) projects.\n\n## Features\n\n- **Multi-staged CI/CD Pipeline**: Seamlessly deploy your CDK applications across multiple stages (e.g., DEV, INT, PROD) and AWS accounts.\n- **Security Scanning**: Perform security scanning on dependencies and codebase, blocking the pipeline in case of CVE findings.\n- **License Management**: Manage licenses for NPM and Python dependencies, ensuring compliance with your organization's policies.\n- **Private NPM Registry**: Securely store and utilize private NPM libraries.\n- **Customizable Pipeline**: Tailor the CI/CD pipeline to your project's specific needs with built-in dependency injection.\n- **Workbench Deployment**: Develop and experiment with your solutions in isolation before introducing them to the delivery pipeline.\n- **Pre/Post Deploy Hooks**: Execute custom scripts before and after deployments in each stage (e.g., unit tests, functional tests, load testing).\n- **Centralized Compliance Logs**: Store compliance logs in pre-configured S3 buckets on a per-stage/environment basis.\n- **Lambda Layer Support**: Build and scan dependencies for Python Lambda Layers.\n\n## Getting Started\n\n### Prerequisites\n\nBefore you begin, ensure that you have the following dependencies installed:\n\n- AWS Account (RES/DEV/INT/PROD)\n- macOS or Cloud9 with Ubuntu Server 22.04 LTS Platform in the RES Account\n- Bash/ZSH terminal\n- Docker version >= 24.0.x\n- AWS CLI v2 ([installation guide](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html))\n- AWS credentials and profiles for each environment in `~/.aws/config` ([configuration guide](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html))\n- Node.js >= v18.17._ && NPM >= v10.2._\n- jq command-line JSON processor (jq-1.7)\n\nFor developing Python Lambdas, you'll also need:\n\n- Python >= 3.11\n- Pipenv 2023.* ([installation guide](https://pipenv.pypa.io/en/latest/))\n\n### Installation\n\n1. Clone the CDK CI/CD Wrapper repository:\n\n   ```bash\n   git clone https://github.com/your-repo/cdk-cicd-wrapper.git\n   cd cdk-cicd-wrapper\n   ```\n\n2. Install the required dependencies:\n\n   ```bash\n   npm install\n   ```\n\n## Usage\n\n### Defining Stages\n\nThe CDK CI/CD Wrapper comes with a default set of stages (DEV, INT, PROD), but you can easily extend or modify these stages to suit your project's needs. Follow the step-by-step guide in the documentation to define your desired stages.\n\n### Configuring Stacks\n\nConfigure the CDK stacks you want to deploy in each stage. The CDK CI/CD Wrapper allows you to specify which stacks should be deployed in each stage, giving you granular control over your deployment process.\n\n### Customizing CI/CD Steps\n\nTailor the CI/CD pipeline to meet your project's specific requirements. The CDK CI/CD Wrapper provides built-in dependency injection, allowing you to customize the CI/CD steps seamlessly.\n\n## Contributing\n\nContributions to the CDK CI/CD Wrapper are welcome! If you'd like to contribute, please follow the guidelines outlined in the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\n## License\n\nThis project is licensed under the [Apache 2.0 License](LICENSE).\n"
  },
  "repository": {
    "directory": "packages/@cdklabs/cdk-cicd-wrapper",
    "type": "git",
    "url": "https://github.com/cdklabs/cdk-cicd-wrapper.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "namespace": "Cdklabs.CdkCicdWrapper",
      "packageId": "Cdklabs.CdkCicdWrapper"
    },
    "java": {
      "maven": {
        "artifactId": "cdk-cicd-wrapper",
        "groupId": "io.github.cdklabs"
      },
      "package": "io.github.cdklabs.cdk.cicd.wrapper"
    },
    "js": {
      "npm": "@cdklabs/cdk-cicd-wrapper"
    },
    "python": {
      "distName": "cdklabs.cdk-cicd-wrapper",
      "module": "cdklabs.cdk_cicd_wrapper"
    }
  },
  "types": {
    "@cdklabs/cdk-cicd-wrapper.AppStage": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stage",
      "docs": {
        "custom": {
          "class": "AppStage",
          "extends": "cdk.Stage - Inherits functionality from the cdk.Stage class."
        },
        "remarks": "This class encapsulates the logic for creating and configuring a deployment stage in an application.",
        "stability": "stable",
        "summary": "Represents a stage in the application deployment process."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.AppStage",
      "initializer": {
        "docs": {
          "custom": {
            "constructor": "true"
          },
          "stability": "stable",
          "summary": "Creates an instance of AppStage."
        },
        "locationInModule": {
          "filename": "src/code-pipeline/AppStage.ts",
          "line": 35
        },
        "parameters": [
          {
            "docs": {
              "summary": "- The scope in which the stage is created."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- The unique identifier for the stage."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- The properties required to create the stage."
            },
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.AppStageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/code-pipeline/AppStage.ts",
        "line": 27
      },
      "name": "AppStage",
      "symbolId": "src/code-pipeline/AppStage:AppStage"
    },
    "@cdklabs/cdk-cicd-wrapper.AppStageProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "custom": {
          "extends": "cdk.StageProps - Inherits properties from the cdk.StageProps interface.",
          "interface": "AppStageProps",
          "property": "{ResourceContext} context - The resource context object containing deployment-related information."
        },
        "remarks": "This interface represents the configuration properties needed to create a stage in the application deployment process.",
        "stability": "stable",
        "summary": "Interface for the properties required to create an AppStage."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.AppStageProps",
      "interfaces": [
        "aws-cdk-lib.StageProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/code-pipeline/AppStage.ts",
        "line": 17
      },
      "name": "AppStageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/AppStage.ts",
            "line": 18
          },
          "name": "context",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
          }
        }
      ],
      "symbolId": "src/code-pipeline/AppStage:AppStageProps"
    },
    "@cdklabs/cdk-cicd-wrapper.BaseRepositoryProviderProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base properties for repository provider."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.BaseRepositoryProviderProps",
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.RepositoryConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/RepositoryProvider.ts",
        "line": 47
      },
      "name": "BaseRepositoryProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 49
          },
          "name": "codeGuruReviewer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 48
          },
          "name": "codeStarConnectionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/RepositoryProvider:BaseRepositoryProviderProps"
    },
    "@cdklabs/cdk-cicd-wrapper.BaseStackProvider": {
      "abstract": true,
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "remarks": "This class implements the IStackProvider interface and provides default implementation\nfor providing deployment hook configurations (pre and post hooks) and accessing context properties.",
        "stability": "stable",
        "summary": "Abstract base class for providing stacks to a deployment pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.BaseStackProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IStackProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/common/types/BaseStackProvider.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "returns": "An array of post-deployment hook steps.",
            "stability": "stable",
            "summary": "Returns the post-deployment hook steps for this stack provider."
          },
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 61
          },
          "name": "postHooks",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "aws-cdk-lib.pipelines.Step"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "An array of pre-deployment hook steps.",
            "stability": "stable",
            "summary": "Returns the pre-deployment hook steps for this stack provider."
          },
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 53
          },
          "name": "preHooks",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "aws-cdk-lib.pipelines.Step"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provides the deployment hook configuration for this stack provider."
          },
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 31
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IStackProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context containing the scope, stage, environment, and blueprint properties."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "The resolved value of the SSM parameter.",
            "stability": "stable",
            "summary": "Resolves the value of an SSM parameter."
          },
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 140
          },
          "name": "resolve",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the SSM parameter to resolve."
              },
              "name": "ssmParameterName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Abstract method that must be implemented by subclasses to define the stacks to be deployed."
          },
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 69
          },
          "name": "stacks",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context containing the scope, stage, environment, and blueprint properties."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ]
        }
      ],
      "name": "BaseStackProvider",
      "properties": [
        {
          "docs": {
            "returns": "The name of the application being deployed.",
            "stability": "stable",
            "summary": "Getter for the application name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 107
          },
          "name": "applicationName",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "returns": "The qualifier for the application being deployed.",
            "stability": "stable",
            "summary": "Getter for the application qualifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 115
          },
          "name": "applicationQualifier",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "returns": "The resource context containing the scope, stage, environment, and blueprint properties.",
            "stability": "stable",
            "summary": "Getter for the resource context."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 75
          },
          "name": "context",
          "protected": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
          }
        },
        {
          "docs": {
            "returns": "The encryption key used in the deployment.",
            "stability": "stable",
            "summary": "Getter for the encryption key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 131
          },
          "name": "encryptionKey",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.Key"
          }
        },
        {
          "docs": {
            "returns": "The deployment environment.",
            "stability": "stable",
            "summary": "Getter for the deployment environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 91
          },
          "name": "env",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.Environment"
          }
        },
        {
          "docs": {
            "returns": "The pipeline configuration properties.",
            "stability": "stable",
            "summary": "Getter for the pipeline configuration properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 123
          },
          "name": "properties",
          "protected": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelineConfig"
          }
        },
        {
          "docs": {
            "returns": "The deployment scope construct.",
            "stability": "stable",
            "summary": "Getter for the deployment scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 83
          },
          "name": "scope",
          "protected": true,
          "type": {
            "fqn": "constructs.Construct"
          }
        },
        {
          "docs": {
            "returns": "The name of the deployment stage.",
            "stability": "stable",
            "summary": "Getter for the stage name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/BaseStackProvider.ts",
            "line": 99
          },
          "name": "stageName",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/BaseStackProvider:BaseStackProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.BasicRepositoryProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Basic implementation of repository provider."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.BasicRepositoryProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/RepositoryProvider.ts",
          "line": 56
        },
        "parameters": [
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.BaseRepositoryProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/RepositoryProvider.ts",
        "line": 55
      },
      "methods": [
        {
          "docs": {
            "returns": "The repository stack.",
            "stability": "stable",
            "summary": "Provides a repository stack based on the configuration."
          },
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 63
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "BasicRepositoryProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 56
          },
          "name": "config",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.BaseRepositoryProviderProps"
          }
        }
      ],
      "symbolId": "src/resource-providers/RepositoryProvider:BasicRepositoryProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.CDKPipeline": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.pipelines.CodePipeline",
      "docs": {
        "stability": "stable",
        "summary": "A construct for creating a CDK pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CDKPipeline",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new instance of the CDKPipeline construct."
        },
        "locationInModule": {
          "filename": "src/code-pipeline/CDKPipeline.ts",
          "line": 149
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The ID of the construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The props for configuring the pipeline."
            },
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.CDKPipelineProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/code-pipeline/CDKPipeline.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Builds the pipeline by applying necessary configurations and suppressing certain CDK Nag rules."
          },
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 181
          },
          "name": "buildPipeline",
          "overrides": "aws-cdk-lib.pipelines.PipelineBase"
        }
      ],
      "name": "CDKPipeline",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default install commands for the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 137
          },
          "name": "installCommands",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/code-pipeline/CDKPipeline:CDKPipeline"
    },
    "@cdklabs/cdk-cicd-wrapper.CDKPipelineProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for the CDKPipeline construct."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CDKPipelineProps",
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.PipelineProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/code-pipeline/CDKPipeline.ts",
        "line": 17
      },
      "name": "CDKPipelineProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The qualifier for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 21
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 25
          },
          "name": "pipelineName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Additional IAM policies to be attached to the pipeline role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 29
          },
          "name": "rolePolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/code-pipeline/CDKPipeline:CDKPipelineProps"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeBuildFactoryProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Provides HTTPProxy settings for the pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeBuildFactoryProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
          "line": 28
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "returns": "The DefaultCodeBuildFactory instance",
            "stability": "stable",
            "summary": "Provides the DefaultCodeBuildFactory instance."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 35
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The ResourceContext object containing blueprint properties and other resources."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "CodeBuildFactoryProvider",
      "symbolId": "src/resource-providers/CodeBuildFactoryProvider:CodeBuildFactoryProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeCommitRepositoryConstruct": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A construct for creating a new AWS CodeCommit repository with optional pull request checks."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeCommitRepositoryConstruct",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
          "line": 68
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.CodeCommitRepositoryConstructProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
        "line": 62
      },
      "name": "CodeCommitRepositoryConstruct",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The pipeline input for the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 66
          },
          "name": "pipelineInput",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.IFileSetProducer"
          }
        }
      ],
      "symbolId": "src/constructs/CodeCommitRepositoryConstruct:CodeCommitRepositoryConstruct"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeCommitRepositoryConstructProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a new CodeCommit repository construct."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeCommitRepositoryConstructProps",
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.RepositoryConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
        "line": 42
      },
      "name": "CodeCommitRepositoryConstructProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 46
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A qualifier for the application name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 51
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Optional configuration for enabling pull request checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 56
          },
          "name": "pr",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.PRCheckConfig"
          }
        }
      ],
      "symbolId": "src/constructs/CodeCommitRepositoryConstruct:CodeCommitRepositoryConstructProps"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeGuruSeverityThreshold": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents the severity thresholds for CodeGuru."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeGuruSeverityThreshold",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 68
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Information severity threshold."
          },
          "name": "INFO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Low severity threshold."
          },
          "name": "LOW"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Medium severity threshold."
          },
          "name": "MEDIUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High severity threshold."
          },
          "name": "HIGH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Critical severity threshold."
          },
          "name": "CRITICAL"
        }
      ],
      "name": "CodeGuruSeverityThreshold",
      "symbolId": "src/common/types/Types:CodeGuruSeverityThreshold"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeStarConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "custom": {
          "extends": "RepositoryConfig"
        },
        "stability": "stable",
        "summary": "Configuration properties for the CodeStarConnectionConstruct."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeStarConfig",
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.RepositoryConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/constructs/CodeStarConnectionConstruct.ts",
        "line": 12
      },
      "name": "CodeStarConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the CodeStar connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeStarConnectionConstruct.ts",
            "line": 16
          },
          "name": "codeStarConnectionArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/constructs/CodeStarConnectionConstruct:CodeStarConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeStarConnectRepositoryStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "stability": "stable",
        "summary": "Stack that sets up a CodeStar connection and provides the pipeline input and environment variables."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeStarConnectRepositoryStack",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the CodeStarConnectRepositoryStack."
        },
        "locationInModule": {
          "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
          "line": 50
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which the stack is created."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The ID of the stack."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The properties for the stack."
            },
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.CodeStarConnectRepositoryStackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IRepositoryStack"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
        "line": 28
      },
      "name": "CodeStarConnectRepositoryStack",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The environment variables to be used by the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
            "line": 37
          },
          "name": "pipelineEnvVars",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IRepositoryStack",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The pipeline input (file set producer) for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
            "line": 32
          },
          "name": "pipelineInput",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IRepositoryStack",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.IFileSetProducer"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The branch of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
            "line": 42
          },
          "name": "repositoryBranch",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IRepositoryStack",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/stacks/CodeStarConnectRepositoryStack:CodeStarConnectRepositoryStack"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeStarConnectRepositoryStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the CodeStarConnectRepositoryStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeStarConnectRepositoryStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps",
        "@cdklabs/cdk-cicd-wrapper.CodeStarConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
        "line": 13
      },
      "name": "CodeStarConnectRepositoryStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
            "line": 17
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The qualifier for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/CodeStarConnectRepositoryStack.ts",
            "line": 22
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/stacks/CodeStarConnectRepositoryStack:CodeStarConnectRepositoryStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.CodeStarConnectionConstruct": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Constructs an AWS CodeStar connection for use in a CodePipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.CodeStarConnectionConstruct",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the CodeStarConnectionConstruct class."
        },
        "locationInModule": {
          "filename": "src/constructs/CodeStarConnectionConstruct.ts",
          "line": 40
        },
        "parameters": [
          {
            "docs": {
              "summary": "- The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- The unique identifier for this construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- The configuration properties for the construct."
            },
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.CodeStarConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/constructs/CodeStarConnectionConstruct.ts",
        "line": 22
      },
      "name": "CodeStarConnectionConstruct",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the CodeStar connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeStarConnectionConstruct.ts",
            "line": 31
          },
          "name": "codeStarConnectionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The input source for the CodePipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeStarConnectionConstruct.ts",
            "line": 26
          },
          "name": "pipelineInput",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.IFileSetProducer"
          }
        }
      ],
      "symbolId": "src/constructs/CodeStarConnectionConstruct:CodeStarConnectionConstruct"
    },
    "@cdklabs/cdk-cicd-wrapper.ComplianceBucketProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "remarks": "This class is responsible for providing a compliance bucket resource using an existing bucket.",
        "stability": "stable",
        "summary": "Compliance bucket provider which uses existing previously created buckets."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ComplianceBucketProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/ComplianceBucketProvider.ts",
        "line": 23
      },
      "methods": [
        {
          "docs": {
            "returns": "The ComplianceLogBucketStack instance representing the compliance bucket resource.",
            "stability": "stable",
            "summary": "Provides the compliance bucket resource based on the given context."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ComplianceBucketProvider.ts",
            "line": 36
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context containing environment information and blueprint properties."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ComplianceBucketProvider",
      "properties": [
        {
          "docs": {
            "remarks": "This means that the provider will create a separate resource for each stage.",
            "stability": "stable",
            "summary": "The scope of the provider, which is set to PER_STAGE by default."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ComplianceBucketProvider.ts",
            "line": 28
          },
          "name": "scope",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/resource-providers/ComplianceBucketProvider:ComplianceBucketProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.ComplianceLogBucketStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "remarks": "Implements the IComplianceBucketConfig interface to provide the bucket name.",
        "stability": "stable",
        "summary": "Stack for creating a compliance log bucket."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ComplianceLogBucketStack",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the ComplianceLogBucketStack."
        },
        "locationInModule": {
          "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The unique identifier for this construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The properties for the ComplianceLogBucketStack."
            },
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.ComplianceLogBucketStackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IComplianceBucket"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 158
          },
          "name": "createVpcConfig",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "json"
            }
          }
        }
      ],
      "name": "ComplianceLogBucketStack",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the bucket created by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 47
          },
          "name": "bucketName",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IComplianceBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 49
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 50
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetSelection"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 48
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        }
      ],
      "symbolId": "src/stacks/compliance-bucket/ComplianceBucketStack:ComplianceLogBucketStack"
    },
    "@cdklabs/cdk-cicd-wrapper.ComplianceLogBucketStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the ComplianceLogBucketStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ComplianceLogBucketStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
        "line": 17
      },
      "name": "ComplianceLogBucketStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the compliance log bucket to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 21
          },
          "name": "complianceLogBucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security group of the vpc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 31
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnet selection of the vpc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 36
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The vpc where the ComplianceLogBucket CR Lambda must be attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/compliance-bucket/ComplianceBucketStack.ts",
            "line": 26
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        }
      ],
      "symbolId": "src/stacks/compliance-bucket/ComplianceBucketStack:ComplianceLogBucketStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactory": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Default implementation of the ICodeBuildFactory interface Provides CodeBuild options for the pipeline, including proxy and NPM registry configurations."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactory",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
          "line": 121
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.ICodeBuildFactory"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
        "line": 111
      },
      "methods": [
        {
          "docs": {
            "returns": "An object containing the build environment variables",
            "stability": "stable",
            "summary": "Generates build environment variables for the CodeBuild project based on the provided proxy configuration."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 160
          },
          "name": "generateBuildEnvironmentVariables",
          "parameters": [
            {
              "docs": {
                "summary": "The properties containing the proxy configuration."
              },
              "name": "props",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "An object containing Secrets Manager values",
            "stability": "stable",
            "summary": "Generates Secrets Manager values for the CodeBuild project based on the provided proxy configuration."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 207
          },
          "name": "generateCodeBuildSecretsManager",
          "parameters": [
            {
              "docs": {
                "summary": "The properties containing the proxy configuration."
              },
              "name": "props",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "An array of install commands",
            "stability": "stable",
            "summary": "Generates install commands for the CodeBuild project based on the provided proxy configuration."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 187
          },
          "name": "generateInstallCommands",
          "parameters": [
            {
              "docs": {
                "summary": "The properties containing the proxy configuration."
              },
              "name": "props",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "The partially constructed buildspec",
            "stability": "stable",
            "summary": "Generates a partial CodeBuild buildspec based on the provided properties."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 135
          },
          "name": "generatePartialBuildSpec",
          "parameters": [
            {
              "docs": {
                "summary": "The properties used to generate the buildspec."
              },
              "name": "props",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_codebuild.BuildSpec"
            }
          }
        },
        {
          "docs": {
            "returns": "An array of IAM policy statements",
            "stability": "stable",
            "summary": "Generates IAM role policies for the CodeBuild project based on the provided properties."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 228
          },
          "name": "generateRolePolicies",
          "parameters": [
            {
              "docs": {
                "summary": "The properties containing configuration for the CodeBuild project."
              },
              "name": "props",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "aws-cdk-lib.aws_iam.PolicyStatement"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "An object containing default options for a CodeBuild project in a VPC",
            "stability": "stable",
            "summary": "Generates default options for a CodeBuild project in a VPC."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 270
          },
          "name": "generateVPCCodeBuildDefaults",
          "parameters": [
            {
              "docs": {
                "summary": "The VPC to use for the CodeBuild project, default is undefined (no VPC)."
              },
              "name": "vpc",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.IVpc"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "json"
            }
          }
        },
        {
          "docs": {
            "returns": "The CodeBuildOptions object containing options for the CodeBuild project",
            "stability": "stable",
            "summary": "Provides the CodeBuild options for the pipeline."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 283
          },
          "name": "provideCodeBuildOptions",
          "overrides": "@cdklabs/cdk-cicd-wrapper.ICodeBuildFactory",
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
            }
          }
        }
      ],
      "name": "DefaultCodeBuildFactory",
      "symbolId": "src/resource-providers/CodeBuildFactoryProvider:DefaultCodeBuildFactory"
    },
    "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.DefaultCodeBuildFactoryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
        "line": 59
      },
      "name": "DefaultCodeBuildFactoryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The applicationQualifier used for the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 63
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Provider for Parameter Store parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 95
          },
          "name": "parameterProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IParameterConstruct"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AWS region to set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 67
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The account ID of the RES stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 71
          },
          "name": "resAccount",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Additional IAM policy statements to be added to the CodeBuild project role Default value is undefined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 104
          },
          "name": "additionalRolePolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Environment settings for the CodeBuild project Default value is undefined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 91
          },
          "name": "codeBuildEnvSettings",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.BuildEnvironment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The install commands to run before the build phase."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 99
          },
          "name": "installCommands",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for an NPM registry Default value is undefined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 86
          },
          "name": "npmRegistry",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.NPMRegistryConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for an HTTP proxy Default value is undefined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 81
          },
          "name": "proxyConfig",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IProxyConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC to use for the CodeBuild project Default value is undefined (no VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 76
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        }
      ],
      "symbolId": "src/resource-providers/CodeBuildFactoryProvider:DefaultCodeBuildFactoryProps"
    },
    "@cdklabs/cdk-cicd-wrapper.DeploymentDefinition": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a deployment definition."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.DeploymentDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 264
      },
      "name": "DeploymentDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The environment for the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 268
          },
          "name": "env",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Environment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "for DEV stage it is false otherwise true",
            "stability": "stable",
            "summary": "Manual approval is required or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 280
          },
          "name": "manualApprovalRequired",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The stack providers for the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 273
          },
          "name": "stacksProviders",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IStackProvider"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The complianceLogBucketName Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 285
          },
          "name": "complianceLogBucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC configuration for the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 290
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConfig"
          }
        }
      ],
      "symbolId": "src/common/types/Types:DeploymentDefinition"
    },
    "@cdklabs/cdk-cicd-wrapper.DeploymentHookConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the configuration for deployment hooks."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.DeploymentHookConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 238
      },
      "name": "DeploymentHookConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The post-deployment steps (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 247
          },
          "name": "post",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.pipelines.Step"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The pre-deployment steps (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 242
          },
          "name": "pre",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.pipelines.Step"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/common/types/Types:DeploymentHookConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.EncryptionProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "A provider for encryption resources that creates dedicated encryption stacks in each stage."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.EncryptionProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/EncryptionProvider.ts",
        "line": 22
      },
      "methods": [
        {
          "docs": {
            "returns": "The EncryptionStack construct containing the encryption resources.",
            "stability": "stable",
            "summary": "Provides the encryption resources based on the given context."
          },
          "locationInModule": {
            "filename": "src/resource-providers/EncryptionProvider.ts",
            "line": 31
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context containing information about the current scope, blueprint properties, stage, and environment."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "EncryptionProvider",
      "properties": [
        {
          "docs": {
            "remarks": "Defaults to `Scope.GLOBAL`.",
            "stability": "stable",
            "summary": "The scope in which the resource provider is available."
          },
          "locationInModule": {
            "filename": "src/resource-providers/EncryptionProvider.ts",
            "line": 23
          },
          "name": "scope",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/resource-providers/EncryptionProvider:EncryptionProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.EncryptionStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "stability": "stable",
        "summary": "A stack that creates a KMS key for encryption and grants the necessary permissions."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.EncryptionStack",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/stacks/EncryptionStack.ts",
          "line": 34
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.EncryptionStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/EncryptionStack.ts",
        "line": 28
      },
      "name": "EncryptionStack",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The KMS key created by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/EncryptionStack.ts",
            "line": 32
          },
          "name": "kmsKey",
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.Key"
          }
        }
      ],
      "symbolId": "src/stacks/EncryptionStack:EncryptionStack"
    },
    "@cdklabs/cdk-cicd-wrapper.EncryptionStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "remarks": "Defines the configuration options required to create an instance of the EncryptionStack.",
        "stability": "stable",
        "summary": "Properties for the EncryptionStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.EncryptionStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/EncryptionStack.ts",
        "line": 13
      },
      "name": "EncryptionStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/EncryptionStack.ts",
            "line": 17
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/EncryptionStack.ts",
            "line": 22
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/stacks/EncryptionStack:EncryptionStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.Environment": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents an environment with an account and region."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.Environment",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 18
      },
      "name": "Environment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The account ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 22
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 27
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:Environment"
    },
    "@cdklabs/cdk-cicd-wrapper.GlobalResources": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Enum representing global resources."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.GlobalResources",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/common/spi/ResourceContext.ts",
        "line": 278
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPOSITORY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PROXY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ENCRYPTION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PARAMETER_STORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STAGE_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CODEBUILD_FACTORY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPLIANCE_BUCKET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PIPELINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PHASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HOOK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ADDON_STORE"
        }
      ],
      "name": "GlobalResources",
      "symbolId": "src/common/spi/ResourceContext:GlobalResources"
    },
    "@cdklabs/cdk-cicd-wrapper.Hook": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.Hook",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/HooksProvider.ts",
        "line": 44
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 51
          },
          "name": "addPostHook",
          "parameters": [
            {
              "name": "hook",
              "type": {
                "fqn": "aws-cdk-lib.pipelines.Step"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 45
          },
          "name": "addPreHook",
          "parameters": [
            {
              "name": "hook",
              "type": {
                "fqn": "aws-cdk-lib.pipelines.Step"
              }
            }
          ],
          "static": true
        }
      ],
      "name": "Hook",
      "symbolId": "src/resource-providers/HooksProvider:Hook"
    },
    "@cdklabs/cdk-cicd-wrapper.HookProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.HookProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/HooksProvider.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Provides resources based on the given context."
          },
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 18
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "HookProvider",
      "properties": [
        {
          "docs": {
            "remarks": "Defaults to `Scope.GLOBAL`.",
            "stability": "stable",
            "summary": "The scope in which the resource provider is available."
          },
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 16
          },
          "name": "scope",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/resource-providers/HooksProvider:HookProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.HttpProxyProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Provides HTTPProxy settings for the pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.HttpProxyProvider",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new instance of the HttpProxyProvider class."
        },
        "locationInModule": {
          "filename": "src/resource-providers/ProxyProvider.ts",
          "line": 57
        },
        "parameters": [
          {
            "docs": {
              "remarks": "If not provided, the default configuration will be used.",
              "summary": "The proxy configuration."
            },
            "name": "proxy",
            "optional": true,
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.IProxyConfig"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/ProxyProvider.ts",
        "line": 52
      },
      "methods": [
        {
          "docs": {
            "returns": "The proxy configuration.",
            "stability": "stable",
            "summary": "Provides the proxy configuration for the pipeline."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ProxyProvider.ts",
            "line": 64
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "HttpProxyProvider",
      "properties": [
        {
          "docs": {
            "remarks": "If not provided, the default configuration will be used.",
            "stability": "stable",
            "summary": "The proxy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/ProxyProvider.ts",
            "line": 57
          },
          "name": "proxy",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IProxyConfig"
          }
        }
      ],
      "symbolId": "src/resource-providers/ProxyProvider:HttpProxyProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.ICodeBuildFactory": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Interface for a factory that provides CodeBuild options for the pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ICodeBuildFactory",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
        "line": 16
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "returns": "The CodeBuildOptions object containing options for the CodeBuild project",
            "stability": "stable",
            "summary": "Provides the CodeBuild options for the pipeline."
          },
          "locationInModule": {
            "filename": "src/resource-providers/CodeBuildFactoryProvider.ts",
            "line": 21
          },
          "name": "provideCodeBuildOptions",
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
            }
          }
        }
      ],
      "name": "ICodeBuildFactory",
      "symbolId": "src/resource-providers/CodeBuildFactoryProvider:ICodeBuildFactory"
    },
    "@cdklabs/cdk-cicd-wrapper.ICodeCommitConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents the configuration for a CodeCommit repository."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ICodeCommitConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 338
      },
      "name": "ICodeCommitConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The branch for the repository."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 352
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether to enable CodeGuru Reviewer for the repository."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 357
          },
          "name": "codeGuruReviewer",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the repository."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 347
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 342
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:ICodeCommitConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.IComplianceBucket": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "remarks": "This interface defines the configuration properties for a compliance bucket.",
        "stability": "stable",
        "summary": "Compliance Bucket configuration interface."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IComplianceBucket",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/ComplianceBucketProvider.ts",
        "line": 12
      },
      "name": "IComplianceBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the compliance bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/ComplianceBucketProvider.ts",
            "line": 16
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/ComplianceBucketProvider:IComplianceBucket"
    },
    "@cdklabs/cdk-cicd-wrapper.IDeploymentHookConfigProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IDeploymentHookConfigProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/HooksProvider.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 12
          },
          "name": "addPostHook",
          "parameters": [
            {
              "name": "hook",
              "type": {
                "fqn": "aws-cdk-lib.pipelines.Step"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 10
          },
          "name": "addPreHook",
          "parameters": [
            {
              "name": "hook",
              "type": {
                "fqn": "aws-cdk-lib.pipelines.Step"
              }
            }
          ]
        }
      ],
      "name": "IDeploymentHookConfigProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/HooksProvider.ts",
            "line": 8
          },
          "name": "config",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.DeploymentHookConfig"
          }
        }
      ],
      "symbolId": "src/resource-providers/HooksProvider:IDeploymentHookConfigProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.IEncryptionKey": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Interface representing a construct for supplying an encryption key."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IEncryptionKey",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/EncryptionProvider.ts",
        "line": 12
      },
      "name": "IEncryptionKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The KMS Key used for encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/EncryptionProvider.ts",
            "line": 16
          },
          "name": "kmsKey",
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.Key"
          }
        }
      ],
      "symbolId": "src/resource-providers/EncryptionProvider:IEncryptionKey"
    },
    "@cdklabs/cdk-cicd-wrapper.IManagedVpcConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "VPC Configuration for new VPC."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IManagedVpcConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/VPCProvider.ts",
        "line": 13
      },
      "name": "IManagedVpcConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "default is: 172.31.0.0/20",
            "stability": "stable",
            "summary": "CIDR block for the VPC."
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 17
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "default is: 2",
            "stability": "stable",
            "summary": "Max AZs."
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 27
          },
          "name": "maxAzs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "default is: 24",
            "stability": "stable",
            "summary": "Subnets CIDR masks."
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 22
          },
          "name": "subnetCidrMask",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/resource-providers/VPCProvider:IManagedVpcConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.IParameterConstruct": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Construct to supply persistent parameters for IaaC code."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IParameterConstruct",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/ParameterProvider.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Create a parameter that is accessible through the pipeline."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ParameterProvider.ts",
            "line": 20
          },
          "name": "createParameter",
          "parameters": [
            {
              "docs": {
                "summary": "- name of the parameter."
              },
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- value of the parameter."
              },
              "name": "parameterValue",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_ssm.IStringParameter"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns with a policy that allows access to the parameters."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ParameterProvider.ts",
            "line": 25
          },
          "name": "provideParameterPolicyStatement",
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.PolicyStatement"
            }
          }
        }
      ],
      "name": "IParameterConstruct",
      "symbolId": "src/resource-providers/ParameterProvider:IParameterConstruct"
    },
    "@cdklabs/cdk-cicd-wrapper.IPhaseCommand": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents a phase command."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 428
      },
      "name": "IPhaseCommand",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The command to run during the phase."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 432
          },
          "name": "command",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:IPhaseCommand"
    },
    "@cdklabs/cdk-cicd-wrapper.IPhaseCommandSettings": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Setting the list of commands for the phases."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommandSettings",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 193
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "returns": "The list of commands for the specified phases.",
            "stability": "stable",
            "summary": "Returns the list of commands for the specified phases."
          },
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 199
          },
          "name": "getCommands",
          "parameters": [
            {
              "docs": {
                "summary": "The phases for which commands are needed."
              },
              "name": "phases",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.PipelinePhases"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "variadic": true
        }
      ],
      "name": "IPhaseCommandSettings",
      "symbolId": "src/resource-providers/PhaseCommandProvider:IPhaseCommandSettings"
    },
    "@cdklabs/cdk-cicd-wrapper.IPipelineBlueprintProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Interface for Pipeline Blueprint configuration properties."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelineBlueprintProps",
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IPipelineConfig"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/PipelineBlueprint.ts",
        "line": 410
      },
      "name": "IPipelineBlueprintProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The resource can represent Vpc, Hosting Zones or other resources, see {@link spi.ResourceType }.\nVPC for the cluster can be registered under the name of 'vpc' or as a single provider of type",
            "stability": "stable",
            "summary": "Named resource providers to leverage for cluster resources."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 417
          },
          "name": "resourceProviders",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/stacks/PipelineBlueprint:IPipelineBlueprintProps"
    },
    "@cdklabs/cdk-cicd-wrapper.IPipelineConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents the configuration for a vanilla pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelineConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 118
      },
      "name": "IPipelineConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 122
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The qualifier for the application."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 127
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The environment settings for CodeBuild."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 147
          },
          "name": "codeBuildEnvSettings",
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.BuildEnvironment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The deployment definition for each stage."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 137
          },
          "name": "deploymentDefinition",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.DeploymentDefinition"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of days to retain logs."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 142
          },
          "name": "logRetentionInDays",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The phases in the pipeline."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 157
          },
          "name": "phases",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelinePhases"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The primary output directory for the pipeline."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 162
          },
          "name": "primaryOutputDirectory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The severity threshold for CodeGuru scans (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 152
          },
          "name": "codeGuruScanThreshold",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.CodeGuruSeverityThreshold"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The configuration for the NPM registry (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 132
          },
          "name": "npmRegistry",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.NPMRegistryConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The configuration for the workbench (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 167
          },
          "name": "workbench",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.WorkbenchConfig"
          }
        }
      ],
      "symbolId": "src/common/types/Types:IPipelineConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.IPipelinePhases": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents the phases in a pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelinePhases",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 203
      },
      "name": "IPipelinePhases",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to run during the initialize phase (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 207
          },
          "name": "initialize",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to run during the post-deploy phase (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 232
          },
          "name": "postDeploy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to run during the pre-build phase (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 212
          },
          "name": "preBuild",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to run during the pre-deploy phase (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 227
          },
          "name": "preDeploy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to run during the run-build phase (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 217
          },
          "name": "runBuild",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to run during the testing phase (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 222
          },
          "name": "testing",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/common/types/Types:IPipelinePhases"
    },
    "@cdklabs/cdk-cicd-wrapper.IProxyConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "HTTP(s) Proxy configuration."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IProxyConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/ProxyProvider.ts",
        "line": 32
      },
      "name": "IProxyConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of URLs or IP addresses that should bypass the proxy."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ProxyProvider.ts",
            "line": 41
          },
          "name": "noProxy",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the Secrets Manager secret that contains the proxy credentials."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ProxyProvider.ts",
            "line": 36
          },
          "name": "proxySecretArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A URL to test the proxy configuration."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ProxyProvider.ts",
            "line": 46
          },
          "name": "proxyTestUrl",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/ProxyProvider:IProxyConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.IRepositoryStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents a repository stack in the pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IRepositoryStack",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/RepositoryProvider.ts",
        "line": 33
      },
      "name": "IRepositoryStack",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 35
          },
          "name": "pipelineEnvVars",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 34
          },
          "name": "pipelineInput",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.IFileSetProducer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/RepositoryProvider.ts",
            "line": 36
          },
          "name": "repositoryBranch",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/RepositoryProvider:IRepositoryStack"
    },
    "@cdklabs/cdk-cicd-wrapper.IResourceProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "remarks": "Provides resources through the `provide` method.",
        "stability": "stable",
        "summary": "Interface representing a generic resource provider."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/spi/ResourceContext.ts",
        "line": 27
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "returns": "The provided resources.",
            "stability": "stable",
            "summary": "Provides resources based on the given context."
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 40
          },
          "name": "provide",
          "parameters": [
            {
              "docs": {
                "summary": "The context in which the resources are provided."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IResourceProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to `Scope.GLOBAL`.",
            "stability": "stable",
            "summary": "The scope in which the resource provider is available."
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 32
          },
          "name": "scope",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/common/spi/ResourceContext:IResourceProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.IStackProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents a stack provider interface."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IStackProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 253
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Provides the deployment hook configuration or void."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 258
          },
          "name": "provide",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ]
        }
      ],
      "name": "IStackProvider",
      "symbolId": "src/common/types/Types:IStackProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.IStageDefinition": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents a stage definition."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IStageDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 296
      },
      "name": "IStageDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stage."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 300
          },
          "name": "stage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The account for the stage (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 305
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The complianceBucket Name."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 322
          },
          "name": "complianceLogBucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "for DEV stage it is false otherwise true",
            "stability": "stable",
            "summary": "Manual approval is required or not."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 317
          },
          "name": "manualApprovalRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The region for the stage (optional)."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 310
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC configuration for the stage."
          },
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 327
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConfig"
          }
        }
      ],
      "symbolId": "src/common/types/Types:IStageDefinition"
    },
    "@cdklabs/cdk-cicd-wrapper.IVpcConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Interface representing VPC configuration."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/VPCProvider.ts",
        "line": 43
      },
      "name": "IVpcConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 44
          },
          "name": "managedVPC",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IManagedVpcConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 45
          },
          "name": "vpcFromLookUp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/VPCProvider:IVpcConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.IVpcConfigFromLookUp": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "VPC Configuration for VPC id lookup."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConfigFromLookUp",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/VPCProvider.ts",
        "line": 33
      },
      "name": "IVpcConfigFromLookUp",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC id to lookup."
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 37
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/VPCProvider:IVpcConfigFromLookUp"
    },
    "@cdklabs/cdk-cicd-wrapper.IVpcConstruct": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "VPC construct that provides the VPC and HTTP proxy settings."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConstruct",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resource-providers/VPCProvider.ts",
        "line": 69
      },
      "name": "IVpcConstruct",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 72
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 74
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 70
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        }
      ],
      "symbolId": "src/resource-providers/VPCProvider:IVpcConstruct"
    },
    "@cdklabs/cdk-cicd-wrapper.InlineShellPhaseCommand": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "remarks": "This is used to add scripts from this NPM library to the buildSpec that needs to run without internet access or ability to invoke npm ci.",
        "stability": "stable",
        "summary": "Phase Command that place the scripts code directly into the CodeBuild buildSpec definition."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.InlineShellPhaseCommand",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/PhaseCommandProvider.ts",
          "line": 105
        },
        "parameters": [
          {
            "name": "script",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "default": "false",
              "summary": "Determines whether the script should export environment variables or not."
            },
            "name": "exportEnvironment",
            "optional": true,
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 104
      },
      "name": "InlineShellPhaseCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the command to be executed for the given inline shell script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 117
          },
          "name": "command",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Determines whether the script should export environment variables or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 111
          },
          "name": "exportEnvironment",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 106
          },
          "name": "script",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/PhaseCommandProvider:InlineShellPhaseCommand"
    },
    "@cdklabs/cdk-cicd-wrapper.ManagedVPCStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "stability": "stable",
        "summary": "A stack that creates or looks up a VPC and configures its settings."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ManagedVPCStack",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/stacks/vpc/ManagedVPCStack.ts",
          "line": 109
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.ManagedVPCStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/vpc/ManagedVPCStack.ts",
        "line": 74
      },
      "name": "ManagedVPCStack",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 99
          },
          "name": "allowAllOutbound",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 95
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The list of CodeBuild VPC InterfacesVpcEndpointAwsServices."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 93
          },
          "name": "codeBuildVPCInterfaces",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpointAwsService"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 103
          },
          "name": "maxAzs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 97
          },
          "name": "restrictDefaultSecurityGroup",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 101
          },
          "name": "subnetCidrMask",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC created or looked up by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 78
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 105
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnets attached to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 88
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetType"
          }
        }
      ],
      "symbolId": "src/stacks/vpc/ManagedVPCStack:ManagedVPCStack"
    },
    "@cdklabs/cdk-cicd-wrapper.ManagedVPCStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the VPCStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ManagedVPCStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/vpc/ManagedVPCStack.ts",
        "line": 12
      },
      "name": "ManagedVPCStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CIDR block for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 16
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Max AZs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 26
          },
          "name": "maxAzs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Subnets CIDR masks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 21
          },
          "name": "subnetCidrMask",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Default value is false.",
            "stability": "stable",
            "summary": "Whether to use a proxy for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 32
          },
          "name": "useProxy",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is set to true, there will only be a single egress rule which allows all\noutbound traffic. If this is set to false, no outbound traffic will be allowed by\ndefault and all egress traffic must be explicitly authorized.",
            "stability": "stable",
            "summary": "Whether to allow all outbound traffic by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 56
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The list of CodeBuild VPC InterfacesVpcEndpointAwsServices to extend the defaultCodeBuildVPCInterfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 61
          },
          "name": "codeBuildVPCInterfaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpointAwsService"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the S3 bucket for VPC flow logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 37
          },
          "name": "flowLogsBucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If set to true then the default inbound & outbound rules will be removed from the default security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 45
          },
          "name": "restrictDefaultSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private Subnet only",
            "stability": "stable",
            "summary": "The subnets attached to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/ManagedVPCStack.ts",
            "line": 68
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetType"
          }
        }
      ],
      "symbolId": "src/stacks/vpc/ManagedVPCStack:ManagedVPCStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.NPMPhaseCommand": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Phase command that invokes NPM scripts from project package.json."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.NPMPhaseCommand",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/PhaseCommandProvider.ts",
          "line": 12
        },
        "parameters": [
          {
            "name": "script",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 11
      },
      "name": "NPMPhaseCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the command to be executed for the given NPM script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 17
          },
          "name": "command",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 12
          },
          "name": "script",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/PhaseCommandProvider:NPMPhaseCommand"
    },
    "@cdklabs/cdk-cicd-wrapper.NPMRegistryConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the configuration for an NPM registry."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.NPMRegistryConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 98
      },
      "name": "NPMRegistryConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the secret containing the basic auth credentials for the NPM registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 107
          },
          "name": "basicAuthSecretArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The URL of the NPM registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 102
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope for the NPM registry (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 112
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:NPMRegistryConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.NoVPCStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "A NoVPCStack that does not create a VPC."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.NoVPCStack",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the NoVPCStack class."
        },
        "locationInModule": {
          "filename": "src/stacks/vpc/NoVPCStack.ts",
          "line": 34
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IVpcConstruct"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/vpc/NoVPCStack.ts",
        "line": 10
      },
      "name": "NoVPCStack",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The list of CodeBuild VPC Interface VPC Endpoint AWS Services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/NoVPCStack.ts",
            "line": 29
          },
          "name": "codeBuildVPCInterfaces",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpointAwsService"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The security group attached to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/NoVPCStack.ts",
            "line": 19
          },
          "name": "securityGroup",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IVpcConstruct",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnet type attached to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/NoVPCStack.ts",
            "line": 24
          },
          "name": "subnetType",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IVpcConstruct",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC created or looked up by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/NoVPCStack.ts",
            "line": 14
          },
          "name": "vpc",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IVpcConstruct",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        }
      ],
      "symbolId": "src/stacks/vpc/NoVPCStack:NoVPCStack"
    },
    "@cdklabs/cdk-cicd-wrapper.PRCheckConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for enabling pull request checks."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PRCheckConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
        "line": 21
      },
      "name": "PRCheckConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AWS CodeBuild build spec to use for pull request checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 31
          },
          "name": "buildSpec",
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.BuildSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Additional options for the AWS CodeBuild project used for pull request checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 36
          },
          "name": "codeBuildOptions",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to enable Amazon CodeGuru Reviewer for the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/constructs/CodeCommitRepositoryConstruct.ts",
            "line": 26
          },
          "name": "codeGuruReviewer",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/constructs/CodeCommitRepositoryConstruct:PRCheckConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.ParameterProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Resource provider that creates Parameters in AWS Systems Manager (SSM)."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ParameterProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/ParameterProvider.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "returns": "The SSMParameterStack instance",
            "stability": "stable",
            "summary": "Provides the resources (SSM parameters) based on the given context."
          },
          "locationInModule": {
            "filename": "src/resource-providers/ParameterProvider.ts",
            "line": 38
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "- The context that contains scope, blueprint properties, and environment."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ParameterProvider",
      "symbolId": "src/resource-providers/ParameterProvider:ParameterProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.ParameterResolver": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "This class provides functionality to resolve parameter values from AWS Systems Manager Parameter Store or from provided string values."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ParameterResolver",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/utils/ParameterResolver.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "returns": "The resolved parameter value.",
            "stability": "stable",
            "summary": "Resolves the value of a parameter, either from an SSM parameter or using the provided string value."
          },
          "locationInModule": {
            "filename": "src/utils/ParameterResolver.ts",
            "line": 22
          },
          "name": "resolveValue",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which the parameter is resolved."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "remarks": "If it starts with 'ssm:', it will be treated as an SSM parameter name.",
                "summary": "The parameter value to resolve."
              },
              "name": "param",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "ParameterResolver",
      "properties": [
        {
          "const": true,
          "docs": {
            "default": "'resolve'",
            "stability": "stable",
            "summary": "The prefix used to identify parameter resolution from AWS Systems Manager Parameter Store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/utils/ParameterResolver.ts",
            "line": 14
          },
          "name": "PREFIX",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/utils/ParameterResolver:ParameterResolver"
    },
    "@cdklabs/cdk-cicd-wrapper.PhaseCommandProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Provides the phase commands."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PhaseCommandProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 225
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Provides resources based on the given context."
          },
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 228
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "PhaseCommandProvider",
      "properties": [
        {
          "docs": {
            "remarks": "Defaults to `Scope.GLOBAL`.",
            "stability": "stable",
            "summary": "The scope in which the resource provider is available."
          },
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 226
          },
          "name": "scope",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/resource-providers/PhaseCommandProvider:PhaseCommandProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.PipelineBlueprint": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Class for creating a Pipeline Blueprint."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprint",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/PipelineBlueprint.ts",
        "line": 423
      },
      "methods": [
        {
          "docs": {
            "returns": "A PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Creates a new PipelineBlueprintBuilder instance."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 428
          },
          "name": "builder",
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          },
          "static": true
        }
      ],
      "name": "PipelineBlueprint",
      "symbolId": "src/stacks/PipelineBlueprint:PipelineBlueprint"
    },
    "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Class for building a Pipeline Blueprint."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructor for the PipelineBlueprintBuilder class."
        },
        "locationInModule": {
          "filename": "src/stacks/PipelineBlueprint.ts",
          "line": 91
        },
        "parameters": [
          {
            "docs": {
              "remarks": "Defaults to the `defaultConfigs` object.",
              "summary": "The configuration properties for the Pipeline Blueprint."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelineBlueprintProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/PipelineBlueprint.ts",
        "line": 76
      },
      "methods": [
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Adds a stack to the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 299
          },
          "name": "addStack",
          "parameters": [
            {
              "docs": {
                "summary": "The stack provider to add."
              },
              "name": "stackProvider",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IStackProvider"
              }
            },
            {
              "docs": {
                "summary": "The stages to which the stack should be added."
              },
              "name": "stages",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the application name for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 134
          },
          "name": "applicationName",
          "parameters": [
            {
              "docs": {
                "summary": "The application name to set."
              },
              "name": "applicationName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the application qualifier for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 164
          },
          "name": "applicationQualifier",
          "parameters": [
            {
              "docs": {
                "summary": "The application qualifier to set."
              },
              "name": "applicationQualifier",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the CodeBuild environment settings for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 194
          },
          "name": "codeBuildEnvSettings",
          "parameters": [
            {
              "docs": {
                "summary": "The CodeBuild environment settings to set."
              },
              "name": "codeBuildEnvSettings",
              "type": {
                "fqn": "aws-cdk-lib.aws_codebuild.BuildEnvironment"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the Amazon CodeGuru Reviewer severity threshold for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 204
          },
          "name": "codeGuruScanThreshold",
          "parameters": [
            {
              "docs": {
                "summary": "The Amazon CodeGuru Reviewer severity threshold to set."
              },
              "name": "codeGuruScanThreshold",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.CodeGuruSeverityThreshold"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Defines a phase for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 321
          },
          "name": "definePhase",
          "parameters": [
            {
              "docs": {
                "summary": "The phase to define."
              },
              "name": "phase",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.PipelinePhases"
              }
            },
            {
              "docs": {
                "summary": "The commands to execute during the phase."
              },
              "name": "commandsToExecute",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Defines the stages for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 240
          },
          "name": "defineStages",
          "parameters": [
            {
              "docs": {
                "summary": "An array of stage definitions or stage names."
              },
              "name": "stageDefinition",
              "type": {
                "collection": {
                  "elementtype": {
                    "union": {
                      "types": [
                        {
                          "primitive": "string"
                        },
                        {
                          "fqn": "@cdklabs/cdk-cicd-wrapper.IStageDefinition"
                        }
                      ]
                    }
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 229
          },
          "name": "disable",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the ID for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 124
          },
          "name": "id",
          "parameters": [
            {
              "docs": {
                "summary": "The ID to set."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the log retention period in days for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 184
          },
          "name": "logRetentionInDays",
          "parameters": [
            {
              "docs": {
                "summary": "The log retention period in days to set."
              },
              "name": "logRetentionInDays",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the NPM registry configuration for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 144
          },
          "name": "npmRegistry",
          "parameters": [
            {
              "docs": {
                "summary": "The NPM registry configuration to set."
              },
              "name": "npmRegistry",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.NPMRegistryConfig"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the proxy configuration for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 154
          },
          "name": "proxy",
          "parameters": [
            {
              "docs": {
                "remarks": "If not provided, a default proxy configuration will be used.",
                "summary": "The proxy configuration to set."
              },
              "name": "proxy",
              "optional": true,
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IProxyConfig"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the AWS region for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 174
          },
          "name": "region",
          "parameters": [
            {
              "docs": {
                "summary": "The AWS region to set."
              },
              "name": "region",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets the repository provider for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 214
          },
          "name": "repositoryProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The repository provider to set."
              },
              "name": "repositoryProvider",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets a resource provider for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 224
          },
          "name": "resourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the resource provider."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The resource provider to set."
              },
              "name": "provider",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        },
        {
          "docs": {
            "returns": "The created stack.",
            "stability": "stable",
            "summary": "Synthesizes the Pipeline Blueprint and creates the necessary stacks."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 331
          },
          "name": "synth",
          "parameters": [
            {
              "docs": {
                "summary": "The CDK app instance."
              },
              "name": "app",
              "type": {
                "fqn": "aws-cdk-lib.App"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.Stack"
            }
          }
        },
        {
          "docs": {
            "returns": "This PipelineBlueprintBuilder instance.",
            "stability": "stable",
            "summary": "Sets up a workbench environment for the Pipeline Blueprint."
          },
          "locationInModule": {
            "filename": "src/stacks/PipelineBlueprint.ts",
            "line": 284
          },
          "name": "workbench",
          "parameters": [
            {
              "docs": {
                "summary": "The stack provider for the workbench environment."
              },
              "name": "stackProvider",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.IStackProvider"
              }
            },
            {
              "docs": {
                "summary": "Optional workbench options."
              },
              "name": "option",
              "optional": true,
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.WorkbenchOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineBlueprintBuilder"
            }
          }
        }
      ],
      "name": "PipelineBlueprintBuilder",
      "symbolId": "src/stacks/PipelineBlueprint:PipelineBlueprintBuilder"
    },
    "@cdklabs/cdk-cicd-wrapper.PipelinePhases": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents the phases in a pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PipelinePhases",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 388
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The initialize phase."
          },
          "name": "INITIALIZE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The pre-build phase."
          },
          "name": "PRE_BUILD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The build phase."
          },
          "name": "BUILD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The testing phase."
          },
          "name": "TESTING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The pre-deploy phase."
          },
          "name": "PRE_DEPLOY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The post-deploy phase."
          },
          "name": "POST_DEPLOY"
        }
      ],
      "name": "PipelinePhases",
      "symbolId": "src/common/types/Types:PipelinePhases"
    },
    "@cdklabs/cdk-cicd-wrapper.PipelineProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for configuring the pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PipelineProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/code-pipeline/CDKPipeline.ts",
        "line": 67
      },
      "name": "PipelineProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The branch to be used from the source repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 75
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Default options for CodeBuild projects in the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 112
          },
          "name": "codeBuildDefaults",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.CodeBuildOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The commands to be executed during the synth step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 104
          },
          "name": "pipelineCommands",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The primary output directory for the synth step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 100
          },
          "name": "primaryOutputDirectory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source repository for the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 71
          },
          "name": "repositoryInput",
          "type": {
            "fqn": "aws-cdk-lib.pipelines.IFileSetProducer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Docker image to be used for the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 84
          },
          "name": "buildImage",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.IBuildImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The severity threshold for CodeGuru security scans."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 88
          },
          "name": "codeGuruScanThreshold",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.CodeGuruSeverityThreshold"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Additional install commands to be executed before the synth step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 108
          },
          "name": "installCommands",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether Docker should be enabled for synth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 80
          },
          "name": "isDockerEnabledForSynth",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Pipeline variables to be passed as environment variables."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 96
          },
          "name": "pipelineVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC configuration for the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 92
          },
          "name": "vpcProps",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.VpcProps"
          }
        }
      ],
      "symbolId": "src/code-pipeline/CDKPipeline:PipelineProps"
    },
    "@cdklabs/cdk-cicd-wrapper.PostDeployBuildStep": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.pipelines.CodeBuildStep",
      "docs": {
        "remarks": "This step is responsible for running commands after a successful deployment.",
        "stability": "stable",
        "summary": "A class that represents a post-deployment build step in a CDK pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PostDeployBuildStep",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the PostDeployBuildStep class."
        },
        "locationInModule": {
          "filename": "src/code-pipeline/PostDeployBuildStep.ts",
          "line": 21
        },
        "parameters": [
          {
            "docs": {
              "summary": "The stage of the pipeline in which this step is executed."
            },
            "name": "stage",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The properties for the CodeBuild step."
            },
            "name": "props",
            "type": {
              "fqn": "aws-cdk-lib.pipelines.CodeBuildStepProps"
            }
          },
          {
            "docs": {
              "summary": "The name of the application."
            },
            "name": "applicationName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The ARN of the role used for post build step."
            },
            "name": "roleArn",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/code-pipeline/PostDeployBuildStep.ts",
        "line": 12
      },
      "name": "PostDeployBuildStep",
      "symbolId": "src/code-pipeline/PostDeployBuildStep:PostDeployBuildStep"
    },
    "@cdklabs/cdk-cicd-wrapper.PostDeployExecutorStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "stability": "stable",
        "summary": "Stack for creating an IAM role used for Post Deploy command executions."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PostDeployExecutorStack",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/stacks/PostDeployExecutorStack.ts",
          "line": 85
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.PostDeployExecutorStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/PostDeployExecutorStack.ts",
        "line": 48
      },
      "name": "PostDeployExecutorStack",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 49
          },
          "name": "POST_DEPLOY_ROLE_ARN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 68
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The prefix to use for resource names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 54
          },
          "name": "prefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The AWS account ID where the resources will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 58
          },
          "name": "resAccount",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role used for Post Deploy command executions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 83
          },
          "name": "role",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.Role"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the created IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 78
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the created IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 73
          },
          "name": "roleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the deployment stage (e.g., 'prod', 'test')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 63
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/stacks/PostDeployExecutorStack:PostDeployExecutorStack"
    },
    "@cdklabs/cdk-cicd-wrapper.PostDeployExecutorStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the PostDeployExecutorStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PostDeployExecutorStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/PostDeployExecutorStack.ts",
        "line": 12
      },
      "name": "PostDeployExecutorStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 30
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AWS account ID where the resources will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 20
          },
          "name": "resAccount",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the deployment stage (e.g., 'prod', 'test')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 25
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No policy is inlined in the Role resource.",
            "remarks": "These policies will be\ncreated with the role, whereas those added by ``addToPolicy`` are added\nusing a separate CloudFormation resource (allowing a way around circular\ndependencies that could otherwise be introduced).",
            "stability": "stable",
            "summary": "A list of named policies to inline into this role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 40
          },
          "name": "inlinePolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_iam.PolicyDocument"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The prefix to use for resource names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/PostDeployExecutorStack.ts",
            "line": 16
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/stacks/PostDeployExecutorStack:PostDeployExecutorStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.PreDeployBuildStep": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.pipelines.CodeBuildStep",
      "docs": {
        "remarks": "This class is used to create a pre-deployment build step for a specific stage in a pipeline.",
        "stability": "stable",
        "summary": "A class that extends the CodeBuildStep class from the aws-cdk-lib/pipelines module."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PreDeployBuildStep",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new instance of the PreDeployBuildStep class."
        },
        "locationInModule": {
          "filename": "src/code-pipeline/PreDeployBuildStep.ts",
          "line": 18
        },
        "parameters": [
          {
            "docs": {
              "summary": "- The stage for which the pre-deployment build step is being created."
            },
            "name": "stage",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- The properties to be used for creating the CodeBuildStep."
            },
            "name": "props",
            "type": {
              "fqn": "aws-cdk-lib.pipelines.CodeBuildStepProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/code-pipeline/PreDeployBuildStep.ts",
        "line": 11
      },
      "name": "PreDeployBuildStep",
      "symbolId": "src/code-pipeline/PreDeployBuildStep:PreDeployBuildStep"
    },
    "@cdklabs/cdk-cicd-wrapper.ProxyProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for configuring a proxy."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ProxyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/code-pipeline/CDKPipeline.ts",
        "line": 49
      },
      "name": "ProxyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of URLs or IP addresses that should bypass the proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 53
          },
          "name": "noProxy",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the secret containing the proxy credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 57
          },
          "name": "proxySecretArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A URL to test the proxy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 61
          },
          "name": "proxyTestUrl",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/code-pipeline/CDKPipeline:ProxyProps"
    },
    "@cdklabs/cdk-cicd-wrapper.PythonPhaseCommand": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Phase Command that invokes Python scripts from project folder."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.PythonPhaseCommand",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/PhaseCommandProvider.ts",
          "line": 84
        },
        "parameters": [
          {
            "name": "script",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 83
      },
      "name": "PythonPhaseCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the command to be executed for the given Python script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 89
          },
          "name": "command",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 84
          },
          "name": "script",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/PhaseCommandProvider:PythonPhaseCommand"
    },
    "@cdklabs/cdk-cicd-wrapper.RepositoryConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the configuration for a repository."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.RepositoryConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 363
      },
      "name": "RepositoryConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The branch for the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 372
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 377
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 367
          },
          "name": "repositoryType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the repository (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 382
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:RepositoryConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.ResourceContext": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Provides an API to register resource providers and access the provided resources."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of ResourceContext."
        },
        "locationInModule": {
          "filename": "src/common/spi/ResourceContext.ts",
          "line": 172
        },
        "parameters": [
          {
            "docs": {
              "summary": "The construct scope."
            },
            "name": "_scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The pipeline stack construct."
            },
            "name": "pipelineStack",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The pipeline blueprint properties."
            },
            "name": "blueprintProps",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelineBlueprintProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/common/spi/ResourceContext.ts",
        "line": 147
      },
      "methods": [
        {
          "docs": {
            "returns": "The ResourceContext instance.",
            "stability": "stable",
            "summary": "Returns the singleton instance of ResourceContext."
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 153
          },
          "name": "instance",
          "returns": {
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 243
          },
          "name": "add",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "The resource, or undefined if it doesn't exist.",
            "stability": "stable",
            "summary": "Retrieves a resource by its name."
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 224
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the resource."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "returns": "True if the resource exists, false otherwise.",
            "stability": "stable",
            "summary": "Checks if a resource with the given name exists."
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 239
          },
          "name": "has",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the resource."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Initializes the current stage and its associated resource providers."
          },
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 205
          },
          "name": "initStage",
          "parameters": [
            {
              "docs": {
                "summary": "The current stage."
              },
              "name": "stage",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ResourceContext",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The pipeline blueprint properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 175
          },
          "name": "blueprintProps",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IPipelineBlueprintProps"
          }
        },
        {
          "docs": {
            "returns": "The current environment.",
            "stability": "stable",
            "summary": "Retrieves the current environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 261
          },
          "name": "environment",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Environment"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The pipeline stack construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 174
          },
          "name": "pipelineStack",
          "type": {
            "fqn": "constructs.Construct"
          }
        },
        {
          "docs": {
            "returns": "The current construct scope.",
            "stability": "stable",
            "summary": "Retrieves the current construct scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 270
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        },
        {
          "docs": {
            "returns": "The current stage.",
            "stability": "stable",
            "summary": "Retrieves the current stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/spi/ResourceContext.ts",
            "line": 252
          },
          "name": "stage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/spi/ResourceContext:ResourceContext"
    },
    "@cdklabs/cdk-cicd-wrapper.SSMParameterStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "stability": "stable",
        "summary": "A stack for creating and managing AWS Systems Manager (SSM) Parameters."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.SSMParameterStack",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/stacks/SSMParameterStack.ts",
          "line": 33
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.SSMParameterStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/SSMParameterStack.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "returns": "The created SSM String Parameter resource.",
            "stability": "stable",
            "summary": "Creates a new String Parameter in the SSM Parameter Store within the provided scope."
          },
          "locationInModule": {
            "filename": "src/stacks/SSMParameterStack.ts",
            "line": 67
          },
          "name": "createParameter",
          "parameters": [
            {
              "docs": {
                "summary": "- The scope in which to create the parameter."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "- The name of the parameter."
              },
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The value of the parameter."
              },
              "name": "parameterValue",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_ssm.StringParameter"
            }
          }
        },
        {
          "docs": {
            "returns": "The created SSM String Parameter resource.",
            "stability": "stable",
            "summary": "Creates a new String Parameter in the SSM Parameter Store within this stack."
          },
          "locationInModule": {
            "filename": "src/stacks/SSMParameterStack.ts",
            "line": 52
          },
          "name": "createParameterInSSMParameterStack",
          "parameters": [
            {
              "docs": {
                "summary": "- The name of the parameter."
              },
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The value of the parameter."
              },
              "name": "parameterValue",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_ssm.StringParameter"
            }
          }
        },
        {
          "docs": {
            "returns": "The IAM Policy Statement granting access to the SSM Parameters.",
            "stability": "stable",
            "summary": "Provides an IAM Policy Statement that grants permissions to retrieve parameters from the SSM Parameter Store."
          },
          "locationInModule": {
            "filename": "src/stacks/SSMParameterStack.ts",
            "line": 79
          },
          "name": "provideParameterPolicyStatement",
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.PolicyStatement"
            }
          }
        }
      ],
      "name": "SSMParameterStack",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/SSMParameterStack.ts",
            "line": 31
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/stacks/SSMParameterStack:SSMParameterStack"
    },
    "@cdklabs/cdk-cicd-wrapper.SSMParameterStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the SSMParameterStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.SSMParameterStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/SSMParameterStack.ts",
        "line": 12
      },
      "name": "SSMParameterStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The qualifier to use for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/SSMParameterStack.ts",
            "line": 16
          },
          "name": "applicationQualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameters are created.",
            "stability": "stable",
            "summary": "An optional object containing key-value pairs representing the parameters to create in the SSM Parameter Store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/SSMParameterStack.ts",
            "line": 22
          },
          "name": "parameter",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/stacks/SSMParameterStack:SSMParameterStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.Scope": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Defines the scope of a resource provider."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.Scope",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/common/spi/ResourceContext.ts",
        "line": 11
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The resource provider will be available globally across all stages."
          },
          "name": "GLOBAL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The resource provider will be available only within the current stage."
          },
          "name": "PER_STAGE"
        }
      ],
      "name": "Scope",
      "symbolId": "src/common/spi/ResourceContext:Scope"
    },
    "@cdklabs/cdk-cicd-wrapper.SecurityControls": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Implements security controls across various AWS services."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.SecurityControls",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of SecurityControls."
        },
        "locationInModule": {
          "filename": "src/utils/aspects.ts",
          "line": 31
        },
        "parameters": [
          {
            "docs": {
              "summary": "The KMS key to use for encryption."
            },
            "name": "kmsKey",
            "type": {
              "fqn": "aws-cdk-lib.aws_kms.Key"
            }
          },
          {
            "docs": {
              "summary": "The deployment stage (e.g., dev, prod)."
            },
            "name": "stage",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The number of days to retain logs."
            },
            "name": "logRetentionInDays",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The name of the S3 bucket for compliance logs."
            },
            "name": "complianceLogBucketName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "aws-cdk-lib.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/utils/aspects.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Visits an AWS CDK construct and applies security controls."
          },
          "locationInModule": {
            "filename": "src/utils/aspects.ts",
            "line": 43
          },
          "name": "visit",
          "overrides": "aws-cdk-lib.IAspect",
          "parameters": [
            {
              "docs": {
                "summary": "The construct to visit."
              },
              "name": "node",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "SecurityControls",
      "symbolId": "src/utils/aspects:SecurityControls"
    },
    "@cdklabs/cdk-cicd-wrapper.ShellCommandPhaseCommand": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Phase Command that invokes a simple shell command."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ShellCommandPhaseCommand",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/PhaseCommandProvider.ts",
          "line": 70
        },
        "parameters": [
          {
            "docs": {
              "summary": "The command to run during the phase."
            },
            "name": "command",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 69
      },
      "name": "ShellCommandPhaseCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The command to run during the phase."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 70
          },
          "name": "command",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/PhaseCommandProvider:ShellCommandPhaseCommand"
    },
    "@cdklabs/cdk-cicd-wrapper.ShellScriptPhaseCommand": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Phase Command that invokes shell scripts from project folder."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.ShellScriptPhaseCommand",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/PhaseCommandProvider.ts",
          "line": 51
        },
        "parameters": [
          {
            "name": "script",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IPhaseCommand"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/PhaseCommandProvider.ts",
        "line": 50
      },
      "name": "ShellScriptPhaseCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the command to be executed for the given shell script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 56
          },
          "name": "command",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IPhaseCommand",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/PhaseCommandProvider.ts",
            "line": 51
          },
          "name": "script",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource-providers/PhaseCommandProvider:ShellScriptPhaseCommand"
    },
    "@cdklabs/cdk-cicd-wrapper.Stage": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Represents the stages in the pipeline."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.Stage",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 43
      },
      "name": "Stage",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The 'DEV' stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 52
          },
          "name": "DEV",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The 'INT' stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 57
          },
          "name": "INT",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The 'PROD' stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 62
          },
          "name": "PROD",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The 'RES' stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 47
          },
          "name": "RES",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:Stage"
    },
    "@cdklabs/cdk-cicd-wrapper.StageProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Provides AppStage definitions."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.StageProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/StageProvider.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "returns": "An instance of AppStage.",
            "stability": "stable",
            "summary": "Provides an AppStage instance based on the given ResourceContext."
          },
          "locationInModule": {
            "filename": "src/resource-providers/StageProvider.ts",
            "line": 22
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "- The ResourceContext containing information about the current scope, stage, and environment."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "StageProvider",
      "properties": [
        {
          "docs": {
            "remarks": "Defaults to Scope.PER_STAGE.",
            "stability": "stable",
            "summary": "Scope at which the provider operates."
          },
          "locationInModule": {
            "filename": "src/resource-providers/StageProvider.ts",
            "line": 14
          },
          "name": "scope",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/resource-providers/StageProvider:StageProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.VPCFromLookUpStack": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "base": "aws-cdk-lib.Stack",
      "docs": {
        "stability": "stable",
        "summary": "A stack that creates or looks up a VPC and configures its settings."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.VPCFromLookUpStack",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
          "line": 53
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.VPCFromLookUpStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
        "line": 27
      },
      "name": "VPCFromLookUpStack",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The list of CodeBuild VPC InterfacesVpcEndpointAwsServices."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 46
          },
          "name": "codeBuildVPCInterfaces",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpointAwsService"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC created or looked up by this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 31
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the VPC being created or looked up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 51
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The security group attached to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 36
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnets attached to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 41
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetType"
          }
        }
      ],
      "symbolId": "src/stacks/vpc/VPCFromLookUpStack:VPCFromLookUpStack"
    },
    "@cdklabs/cdk-cicd-wrapper.VPCFromLookUpStackProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the VPCStack."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.VPCFromLookUpStackProps",
      "interfaces": [
        "aws-cdk-lib.StackProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
        "line": 12
      },
      "name": "VPCFromLookUpStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The configuration for the VPC to be created or looked up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 16
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The list of CodeBuild VPC InterfacesVpcEndpointAwsServices to extend the defaultCodeBuildVPCInterfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stacks/vpc/VPCFromLookUpStack.ts",
            "line": 21
          },
          "name": "codeBuildVPCInterfaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpointAwsService"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/stacks/vpc/VPCFromLookUpStack:VPCFromLookUpStackProps"
    },
    "@cdklabs/cdk-cicd-wrapper.VPCProvider": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "docs": {
        "stability": "stable",
        "summary": "Legacy VPC Provider that defines the VPC used by the CI/CD process."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.VPCProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource-providers/VPCProvider.ts",
          "line": 83
        },
        "parameters": [
          {
            "name": "legacyConfig",
            "optional": true,
            "type": {
              "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConfig"
            }
          }
        ]
      },
      "interfaces": [
        "@cdklabs/cdk-cicd-wrapper.IResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource-providers/VPCProvider.ts",
        "line": 80
      },
      "methods": [
        {
          "docs": {
            "returns": "The VPC stack",
            "stability": "stable",
            "summary": "Provides the VPC resource."
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 90
          },
          "name": "provide",
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "parameters": [
            {
              "docs": {
                "summary": "The resource context."
              },
              "name": "context",
              "type": {
                "fqn": "@cdklabs/cdk-cicd-wrapper.ResourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "VPCProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 83
          },
          "name": "legacyConfig",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IVpcConfig"
          }
        },
        {
          "docs": {
            "remarks": "Defaults to `Scope.GLOBAL`.",
            "stability": "stable",
            "summary": "The scope in which the resource provider is available."
          },
          "locationInModule": {
            "filename": "src/resource-providers/VPCProvider.ts",
            "line": 81
          },
          "name": "scope",
          "optional": true,
          "overrides": "@cdklabs/cdk-cicd-wrapper.IResourceProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.Scope"
          }
        }
      ],
      "symbolId": "src/resource-providers/VPCProvider:VPCProvider"
    },
    "@cdklabs/cdk-cicd-wrapper.VpcProps": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for configuring a VPC."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.VpcProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/code-pipeline/CDKPipeline.ts",
        "line": 35
      },
      "name": "VpcProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC to be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 39
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Proxy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/code-pipeline/CDKPipeline.ts",
            "line": 43
          },
          "name": "proxy",
          "optional": true,
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.ProxyProps"
          }
        }
      ],
      "symbolId": "src/code-pipeline/CDKPipeline:VpcProps"
    },
    "@cdklabs/cdk-cicd-wrapper.WorkbenchConfig": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the configuration for a workbench."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.WorkbenchConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 173
      },
      "name": "WorkbenchConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The options for the workbench."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 182
          },
          "name": "options",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.WorkbenchOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The stack provider for the workbench."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 177
          },
          "name": "stackProvider",
          "type": {
            "fqn": "@cdklabs/cdk-cicd-wrapper.IStackProvider"
          }
        }
      ],
      "symbolId": "src/common/types/Types:WorkbenchConfig"
    },
    "@cdklabs/cdk-cicd-wrapper.WorkbenchOptions": {
      "assembly": "@cdklabs/cdk-cicd-wrapper",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the options for a workbench."
      },
      "fqn": "@cdklabs/cdk-cicd-wrapper.WorkbenchOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common/types/Types.ts",
        "line": 188
      },
      "name": "WorkbenchOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The stage to use for the workbench (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 192
          },
          "name": "stageToUse",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The prefix for the workbench (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common/types/Types.ts",
            "line": 197
          },
          "name": "workbenchPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common/types/Types:WorkbenchOptions"
    }
  },
  "version": "0.0.0",
  "fingerprint": "TMfqVAMo/b/nxg5CATbRQXHYRazQVbQl6Mf14Qw8zZ4="
}